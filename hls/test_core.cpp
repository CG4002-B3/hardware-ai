#include <stdio.h>
#include "core.h"

#define NUM_SAMPLES 5

const float input[NUM_SAMPLES][INPUT_SIZE] = {
		{0.1738, -0.0249, -0.0947, -0.8939, -0.9442, -0.9608, -0.9237, -0.5169,
		        -0.7835,  0.6678,  0.6629,  0.8182, -0.0023, -0.3813,  0.2892, -0.9527,
		        -0.9295, -0.8861, -0.7992, -0.9484, -0.5267,  0.8407,  0.7987,  0.8325,
		        -0.7981, -0.9905, -0.9809, -0.8054, -0.9910, -0.9810, -0.6503,  0.6768,
		         0.6672, -0.6775,  0.7335,  0.6745},
		{0.2965, -0.0147, -0.1398, -0.9877, -0.8342, -0.9411, -0.9179, -0.4142,
		        -0.7918,  0.8505,  0.6518,  0.8048, -0.0502, -0.0732,  0.1838, -0.9822,
		        -0.9587, -0.9299, -0.8846, -0.9348, -0.6234,  0.8079,  0.8778,  0.8332,
		        -0.9744, -0.8779, -0.9337, -0.9733, -0.8897, -0.9349,  0.8847, -0.1310,
		         0.1756,  0.9651, -0.1592,  0.1517},
		{0.3330, -0.0102, -0.1220, -0.1001,  0.2343, -0.2733,  0.3140, -0.0897,
		        -0.3007,  0.3185, -0.2897,  0.2953, -0.0952,  0.0678,  0.0687, -0.2645,
		        -0.4523, -0.3617, -0.4660, -0.5351, -0.4148,  0.2672,  0.6172,  0.2309,
		        -0.9355, -0.9530, -0.9714, -0.9393, -0.9536, -0.9720,  0.8541, -0.3520,
		         0.0117,  0.8953, -0.3276,  0.0091},
		{0.2519, -0.0304, -0.3516, -0.3442,  0.0833, -0.0125, -0.0628,  0.0143,
		        -0.4547,  0.3703,  0.0079,  0.1184, -0.5537,  0.2218,  0.0527, -0.6502,
		        -0.4884, -0.1990, -0.8052, -0.5592,  0.2333,  0.3708,  0.6961,  0.3226,
		        -0.9237, -0.9409, -0.6182, -0.9290, -0.9431, -0.6368,  0.8376, -0.4082,
		         0.0187,  0.8726, -0.3972, -0.1566},
		{0.3009, -0.0236, -0.0969, -0.9868, -0.9749, -0.9869, -0.9247, -0.5651,
		        -0.7979,  0.8371,  0.6710,  0.8461, -0.0315, -0.2453,  0.1566, -0.9872,
		        -0.9511, -0.9415, -0.8678, -0.9630, -0.6845,  0.8389,  0.8598,  0.8170,
		        -0.9754, -0.9854, -0.9765, -0.9753, -0.9849, -0.9763, -0.7833,  0.6752,
		         0.6708, -0.6775,  0.7303,  0.6763}
};

const int action[NUM_SAMPLES] = {
		0, 1, 2, 3, 0
};

int main() {

	stream_io s_axis;
	stream_io m_axis;

	AXIS_IO write_input;
	AXIS_IO read_output;

	for (int i = 0; i < NUM_SAMPLES; i++) {
		for (int j = 0; j < INPUT_SIZE; j++) {
			write_input.data = input[i][j];
			write_input.last = (j == INPUT_SIZE - 1) ? 1 : 0;
			s_axis.write(write_input);
		}

		inference(s_axis, m_axis);

		read_output = m_axis.read();
		printf("Target action: %d; Predicted action: %d\n", action[i], (int)read_output.data);
	}

}
